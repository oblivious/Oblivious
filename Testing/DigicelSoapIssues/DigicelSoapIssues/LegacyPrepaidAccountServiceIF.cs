//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Web.Services.Description;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="LegacyPrepaidAccountServiceIFSoap11Binding", Namespace="http://axis.soap.service.s2100.product.redknee.com")]
public partial class LegacyPrepaidAccountServiceIF : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback reservRequestConfirmOperationCompleted;
    
    private System.Threading.SendOrPostCallback balanceQueryOperationCompleted;
    
    private System.Threading.SendOrPostCallback balanceDeductOperationCompleted;
    
    private System.Threading.SendOrPostCallback balIncOperationCompleted;
    
    private System.Threading.SendOrPostCallback balQOperationCompleted;
    
    private System.Threading.SendOrPostCallback balanceIncrementOperationCompleted;
    
    private System.Threading.SendOrPostCallback requestDebitOperationCompleted;
    
    private System.Threading.SendOrPostCallback requestBalanceOperationCompleted;
    
    private System.Threading.SendOrPostCallback requestCreditOperationCompleted;
    
    private System.Threading.SendOrPostCallback reservCancelOperationCompleted;
    
    private System.Threading.SendOrPostCallback reservConfirmOperationCompleted;
    
    private System.Threading.SendOrPostCallback balDeductOperationCompleted;
    
    private System.Threading.SendOrPostCallback reservRequestOperationCompleted;
    
    /// <remarks/>
    public LegacyPrepaidAccountServiceIF() {
        this.Url = "http://202.129.228.234:8080/RedkneeSoap/services/LegacyPrepaidAccountServiceIF.Le" +
            "gacyPrepaidAccountServiceIFHttpSoap11Endpoint/";
    }
    
    /// <remarks/>
    public event reservRequestConfirmCompletedEventHandler reservRequestConfirmCompleted;
    
    /// <remarks/>
    public event balanceQueryCompletedEventHandler balanceQueryCompleted;
    
    /// <remarks/>
    public event balanceDeductCompletedEventHandler balanceDeductCompleted;
    
    /// <remarks/>
    public event balIncCompletedEventHandler balIncCompleted;
    
    /// <remarks/>
    public event balQCompletedEventHandler balQCompleted;
    
    /// <remarks/>
    public event balanceIncrementCompletedEventHandler balanceIncrementCompleted;
    
    /// <remarks/>
    public event requestDebitCompletedEventHandler requestDebitCompleted;
    
    /// <remarks/>
    public event requestBalanceCompletedEventHandler requestBalanceCompleted;
    
    /// <remarks/>
    public event requestCreditCompletedEventHandler requestCreditCompleted;
    
    /// <remarks/>
    public event reservCancelCompletedEventHandler reservCancelCompleted;
    
    /// <remarks/>
    public event reservConfirmCompletedEventHandler reservConfirmCompleted;
    
    /// <remarks/>
    public event balDeductCompletedEventHandler balDeductCompleted;
    
    /// <remarks/>
    public event reservRequestCompletedEventHandler reservRequestCompleted;
    
    /// <remarks/>
    [SoapHeader("myHeader", Direction=SoapHeaderDirection.InOut, MemberName="myMemberName")]
    [SoapDocumentMethodAttribute("urn:reservRequestConfirm", RequestElementName="reservRequestConfirm3In", RequestNamespace="http://axis.soap.service.s2100.product.redknee.com", ResponseElementName="reservRequestConfirm3Out", ResponseNamespace="http://axis.soap.service.s2100.product.redknee.com", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
    public void reservRequestConfirm(
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string msisdn, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currencyType, 
                long size, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool sizeSpecified, 
                int duration, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool durationSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string reservID, 
                long confirmSize, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool confirmSizeSpecified, 
                int confirmDuration, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool confirmDurationSpecified, 
                [System.Xml.Serialization.XmlElementAttribute("inParamSet", IsNullable=true)] S2100SOAPParameter[] inParamSet, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string erReference, 
                out int @return, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string newReservID, 
                out long reservSize, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool reservSizeSpecified, 
                out int reservDuration, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool reservDurationSpecified, 
                [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("outParamset", Namespace="http://axis.soap.service.s2100.product.redknee.com/xsd")] out S2100SOAPParameter[] outParamSet) {
        object[] results = this.Invoke("reservRequestConfirm", new object[] {
                    user,
                    password,
                    msisdn,
                    currencyType,
                    size,
                    sizeSpecified,
                    duration,
                    durationSpecified,
                    reservID,
                    confirmSize,
                    confirmSizeSpecified,
                    confirmDuration,
                    confirmDurationSpecified,
                    inParamSet,
                    erReference});
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newReservID = ((string)(results[2]));
        reservSize = ((long)(results[3]));
        reservSizeSpecified = ((bool)(results[4]));
        reservDuration = ((int)(results[5]));
        reservDurationSpecified = ((bool)(results[6]));
        outParamSet = ((S2100SOAPParameter[])(results[7]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginreservRequestConfirm(
                string user, 
                string password, 
                string msisdn, 
                string currencyType, 
                long size, 
                bool sizeSpecified, 
                int duration, 
                bool durationSpecified, 
                string reservID, 
                long confirmSize, 
                bool confirmSizeSpecified, 
                int confirmDuration, 
                bool confirmDurationSpecified, 
                S2100SOAPParameter[] inParamSet, 
                string erReference, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("reservRequestConfirm", new object[] {
                    user,
                    password,
                    msisdn,
                    currencyType,
                    size,
                    sizeSpecified,
                    duration,
                    durationSpecified,
                    reservID,
                    confirmSize,
                    confirmSizeSpecified,
                    confirmDuration,
                    confirmDurationSpecified,
                    inParamSet,
                    erReference}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndreservRequestConfirm(System.IAsyncResult asyncResult, out int @return, out bool returnSpecified, out string newReservID, out long reservSize, out bool reservSizeSpecified, out int reservDuration, out bool reservDurationSpecified, out S2100SOAPParameter[] outParamSet) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newReservID = ((string)(results[2]));
        reservSize = ((long)(results[3]));
        reservSizeSpecified = ((bool)(results[4]));
        reservDuration = ((int)(results[5]));
        reservDurationSpecified = ((bool)(results[6]));
        outParamSet = ((S2100SOAPParameter[])(results[7]));
    }
    
    /// <remarks/>
    public void reservRequestConfirmAsync(string user, string password, string msisdn, string currencyType, long size, bool sizeSpecified, int duration, bool durationSpecified, string reservID, long confirmSize, bool confirmSizeSpecified, int confirmDuration, bool confirmDurationSpecified, S2100SOAPParameter[] inParamSet, string erReference) {
        this.reservRequestConfirmAsync(user, password, msisdn, currencyType, size, sizeSpecified, duration, durationSpecified, reservID, confirmSize, confirmSizeSpecified, confirmDuration, confirmDurationSpecified, inParamSet, erReference, null);
    }
    
    /// <remarks/>
    public void reservRequestConfirmAsync(
                string user, 
                string password, 
                string msisdn, 
                string currencyType, 
                long size, 
                bool sizeSpecified, 
                int duration, 
                bool durationSpecified, 
                string reservID, 
                long confirmSize, 
                bool confirmSizeSpecified, 
                int confirmDuration, 
                bool confirmDurationSpecified, 
                S2100SOAPParameter[] inParamSet, 
                string erReference, 
                object userState) {
        if ((this.reservRequestConfirmOperationCompleted == null)) {
            this.reservRequestConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreservRequestConfirmOperationCompleted);
        }
        this.InvokeAsync("reservRequestConfirm", new object[] {
                    user,
                    password,
                    msisdn,
                    currencyType,
                    size,
                    sizeSpecified,
                    duration,
                    durationSpecified,
                    reservID,
                    confirmSize,
                    confirmSizeSpecified,
                    confirmDuration,
                    confirmDurationSpecified,
                    inParamSet,
                    erReference}, this.reservRequestConfirmOperationCompleted, userState);
    }
    
    private void OnreservRequestConfirmOperationCompleted(object arg) {
        if ((this.reservRequestConfirmCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.reservRequestConfirmCompleted(this, new reservRequestConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:balanceQuery", RequestElementName="balanceQuery7In", RequestNamespace="http://axis.soap.service.s2100.product.redknee.com", ResponseElementName="balanceQuery7Out", ResponseNamespace="http://axis.soap.service.s2100.product.redknee.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void balanceQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string msisdn, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string erReference, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currencyType, bool sendExpiery, [System.Xml.Serialization.XmlIgnoreAttribute()] bool sendExpierySpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string param1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string param2, out int @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string oldExpiery, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string newExpiery, out int balance, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool balanceSpecified) {
        object[] results = this.Invoke("balanceQuery", new object[] {
                    user,
                    password,
                    msisdn,
                    erReference,
                    currencyType,
                    sendExpiery,
                    sendExpierySpecified,
                    param1,
                    param2});
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        oldExpiery = ((string)(results[2]));
        newExpiery = ((string)(results[3]));
        balance = ((int)(results[4]));
        balanceSpecified = ((bool)(results[5]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginbalanceQuery(string user, string password, string msisdn, string erReference, string currencyType, bool sendExpiery, bool sendExpierySpecified, string param1, string param2, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("balanceQuery", new object[] {
                    user,
                    password,
                    msisdn,
                    erReference,
                    currencyType,
                    sendExpiery,
                    sendExpierySpecified,
                    param1,
                    param2}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndbalanceQuery(System.IAsyncResult asyncResult, out int @return, out bool returnSpecified, out string oldExpiery, out string newExpiery, out int balance, out bool balanceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        oldExpiery = ((string)(results[2]));
        newExpiery = ((string)(results[3]));
        balance = ((int)(results[4]));
        balanceSpecified = ((bool)(results[5]));
    }
    
    /// <remarks/>
    public void balanceQueryAsync(string user, string password, string msisdn, string erReference, string currencyType, bool sendExpiery, bool sendExpierySpecified, string param1, string param2) {
        this.balanceQueryAsync(user, password, msisdn, erReference, currencyType, sendExpiery, sendExpierySpecified, param1, param2, null);
    }
    
    /// <remarks/>
    public void balanceQueryAsync(string user, string password, string msisdn, string erReference, string currencyType, bool sendExpiery, bool sendExpierySpecified, string param1, string param2, object userState) {
        if ((this.balanceQueryOperationCompleted == null)) {
            this.balanceQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbalanceQueryOperationCompleted);
        }
        this.InvokeAsync("balanceQuery", new object[] {
                    user,
                    password,
                    msisdn,
                    erReference,
                    currencyType,
                    sendExpiery,
                    sendExpierySpecified,
                    param1,
                    param2}, this.balanceQueryOperationCompleted, userState);
    }
    
    private void OnbalanceQueryOperationCompleted(object arg) {
        if ((this.balanceQueryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.balanceQueryCompleted(this, new balanceQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:balanceDeduct", RequestElementName="balanceDeduct9In", RequestNamespace="http://axis.soap.service.s2100.product.redknee.com", ResponseElementName="balanceDeduct9Out", ResponseNamespace="http://axis.soap.service.s2100.product.redknee.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void balanceDeduct(
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string msisdn, 
                int amount, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currencyType, 
                bool balFlag, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool balFlagSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string erReference, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string param1, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string param2, 
                out int @return, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified, 
                out int newBal, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool newBalSpecified, 
                out int shortFall, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool shortFallSpecified) {
        object[] results = this.Invoke("balanceDeduct", new object[] {
                    user,
                    password,
                    msisdn,
                    amount,
                    amountSpecified,
                    currencyType,
                    balFlag,
                    balFlagSpecified,
                    erReference,
                    param1,
                    param2});
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newBal = ((int)(results[2]));
        newBalSpecified = ((bool)(results[3]));
        shortFall = ((int)(results[4]));
        shortFallSpecified = ((bool)(results[5]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginbalanceDeduct(string user, string password, string msisdn, int amount, bool amountSpecified, string currencyType, bool balFlag, bool balFlagSpecified, string erReference, string param1, string param2, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("balanceDeduct", new object[] {
                    user,
                    password,
                    msisdn,
                    amount,
                    amountSpecified,
                    currencyType,
                    balFlag,
                    balFlagSpecified,
                    erReference,
                    param1,
                    param2}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndbalanceDeduct(System.IAsyncResult asyncResult, out int @return, out bool returnSpecified, out int newBal, out bool newBalSpecified, out int shortFall, out bool shortFallSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newBal = ((int)(results[2]));
        newBalSpecified = ((bool)(results[3]));
        shortFall = ((int)(results[4]));
        shortFallSpecified = ((bool)(results[5]));
    }
    
    /// <remarks/>
    public void balanceDeductAsync(string user, string password, string msisdn, int amount, bool amountSpecified, string currencyType, bool balFlag, bool balFlagSpecified, string erReference, string param1, string param2) {
        this.balanceDeductAsync(user, password, msisdn, amount, amountSpecified, currencyType, balFlag, balFlagSpecified, erReference, param1, param2, null);
    }
    
    /// <remarks/>
    public void balanceDeductAsync(string user, string password, string msisdn, int amount, bool amountSpecified, string currencyType, bool balFlag, bool balFlagSpecified, string erReference, string param1, string param2, object userState) {
        if ((this.balanceDeductOperationCompleted == null)) {
            this.balanceDeductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbalanceDeductOperationCompleted);
        }
        this.InvokeAsync("balanceDeduct", new object[] {
                    user,
                    password,
                    msisdn,
                    amount,
                    amountSpecified,
                    currencyType,
                    balFlag,
                    balFlagSpecified,
                    erReference,
                    param1,
                    param2}, this.balanceDeductOperationCompleted, userState);
    }
    
    private void OnbalanceDeductOperationCompleted(object arg) {
        if ((this.balanceDeductCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.balanceDeductCompleted(this, new balanceDeductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:balInc", RequestElementName="balInc11In", RequestNamespace="http://axis.soap.service.s2100.product.redknee.com", ResponseElementName="balInc11Out", ResponseNamespace="http://axis.soap.service.s2100.product.redknee.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void balInc(
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                long msisdn, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool msisdnSpecified, 
                int amount, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currencyType, 
                bool updExp, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool updExpSpecified, 
                short extendExpiryBy, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool extendExpiryBySpecified, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string erReference, 
                out int @return, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified, 
                out int newBal, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool newBalSpecified) {
        object[] results = this.Invoke("balInc", new object[] {
                    user,
                    password,
                    msisdn,
                    msisdnSpecified,
                    amount,
                    amountSpecified,
                    currencyType,
                    updExp,
                    updExpSpecified,
                    extendExpiryBy,
                    extendExpiryBySpecified,
                    erReference});
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newBal = ((int)(results[2]));
        newBalSpecified = ((bool)(results[3]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginbalInc(string user, string password, long msisdn, bool msisdnSpecified, int amount, bool amountSpecified, string currencyType, bool updExp, bool updExpSpecified, short extendExpiryBy, bool extendExpiryBySpecified, string erReference, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("balInc", new object[] {
                    user,
                    password,
                    msisdn,
                    msisdnSpecified,
                    amount,
                    amountSpecified,
                    currencyType,
                    updExp,
                    updExpSpecified,
                    extendExpiryBy,
                    extendExpiryBySpecified,
                    erReference}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndbalInc(System.IAsyncResult asyncResult, out int @return, out bool returnSpecified, out int newBal, out bool newBalSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newBal = ((int)(results[2]));
        newBalSpecified = ((bool)(results[3]));
    }
    
    /// <remarks/>
    public void balIncAsync(string user, string password, long msisdn, bool msisdnSpecified, int amount, bool amountSpecified, string currencyType, bool updExp, bool updExpSpecified, short extendExpiryBy, bool extendExpiryBySpecified, string erReference) {
        this.balIncAsync(user, password, msisdn, msisdnSpecified, amount, amountSpecified, currencyType, updExp, updExpSpecified, extendExpiryBy, extendExpiryBySpecified, erReference, null);
    }
    
    /// <remarks/>
    public void balIncAsync(string user, string password, long msisdn, bool msisdnSpecified, int amount, bool amountSpecified, string currencyType, bool updExp, bool updExpSpecified, short extendExpiryBy, bool extendExpiryBySpecified, string erReference, object userState) {
        if ((this.balIncOperationCompleted == null)) {
            this.balIncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbalIncOperationCompleted);
        }
        this.InvokeAsync("balInc", new object[] {
                    user,
                    password,
                    msisdn,
                    msisdnSpecified,
                    amount,
                    amountSpecified,
                    currencyType,
                    updExp,
                    updExpSpecified,
                    extendExpiryBy,
                    extendExpiryBySpecified,
                    erReference}, this.balIncOperationCompleted, userState);
    }
    
    private void OnbalIncOperationCompleted(object arg) {
        if ((this.balIncCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.balIncCompleted(this, new balIncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:balQ", RequestElementName="balQ10In", RequestNamespace="http://axis.soap.service.s2100.product.redknee.com", ResponseElementName="balQ10Out", ResponseNamespace="http://axis.soap.service.s2100.product.redknee.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void balQ([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, long msisdn, [System.Xml.Serialization.XmlIgnoreAttribute()] bool msisdnSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string erReference, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currencyType, bool sendExpiery, [System.Xml.Serialization.XmlIgnoreAttribute()] bool sendExpierySpecified, out int @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string expiery, out int balance, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool balanceSpecified) {
        object[] results = this.Invoke("balQ", new object[] {
                    user,
                    password,
                    msisdn,
                    msisdnSpecified,
                    erReference,
                    currencyType,
                    sendExpiery,
                    sendExpierySpecified});
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        expiery = ((string)(results[2]));
        balance = ((int)(results[3]));
        balanceSpecified = ((bool)(results[4]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginbalQ(string user, string password, long msisdn, bool msisdnSpecified, string erReference, string currencyType, bool sendExpiery, bool sendExpierySpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("balQ", new object[] {
                    user,
                    password,
                    msisdn,
                    msisdnSpecified,
                    erReference,
                    currencyType,
                    sendExpiery,
                    sendExpierySpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndbalQ(System.IAsyncResult asyncResult, out int @return, out bool returnSpecified, out string expiery, out int balance, out bool balanceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        expiery = ((string)(results[2]));
        balance = ((int)(results[3]));
        balanceSpecified = ((bool)(results[4]));
    }
    
    /// <remarks/>
    public void balQAsync(string user, string password, long msisdn, bool msisdnSpecified, string erReference, string currencyType, bool sendExpiery, bool sendExpierySpecified) {
        this.balQAsync(user, password, msisdn, msisdnSpecified, erReference, currencyType, sendExpiery, sendExpierySpecified, null);
    }
    
    /// <remarks/>
    public void balQAsync(string user, string password, long msisdn, bool msisdnSpecified, string erReference, string currencyType, bool sendExpiery, bool sendExpierySpecified, object userState) {
        if ((this.balQOperationCompleted == null)) {
            this.balQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbalQOperationCompleted);
        }
        this.InvokeAsync("balQ", new object[] {
                    user,
                    password,
                    msisdn,
                    msisdnSpecified,
                    erReference,
                    currencyType,
                    sendExpiery,
                    sendExpierySpecified}, this.balQOperationCompleted, userState);
    }
    
    private void OnbalQOperationCompleted(object arg) {
        if ((this.balQCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.balQCompleted(this, new balQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:balanceIncrement", RequestElementName="balanceIncrement8In", RequestNamespace="http://axis.soap.service.s2100.product.redknee.com", ResponseElementName="balanceIncrement8Out", ResponseNamespace="http://axis.soap.service.s2100.product.redknee.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void balanceIncrement(
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string msisdn, 
                int amount, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currencyType, 
                bool updExp, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool updExpSpecified, 
                short extendExpiryBy, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool extendExpiryBySpecified, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string erReference, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string param1, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string param2, 
                out int @return, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified, 
                out int newBal, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool newBalSpecified) {
        object[] results = this.Invoke("balanceIncrement", new object[] {
                    user,
                    password,
                    msisdn,
                    amount,
                    amountSpecified,
                    currencyType,
                    updExp,
                    updExpSpecified,
                    extendExpiryBy,
                    extendExpiryBySpecified,
                    erReference,
                    param1,
                    param2});
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newBal = ((int)(results[2]));
        newBalSpecified = ((bool)(results[3]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginbalanceIncrement(string user, string password, string msisdn, int amount, bool amountSpecified, string currencyType, bool updExp, bool updExpSpecified, short extendExpiryBy, bool extendExpiryBySpecified, string erReference, string param1, string param2, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("balanceIncrement", new object[] {
                    user,
                    password,
                    msisdn,
                    amount,
                    amountSpecified,
                    currencyType,
                    updExp,
                    updExpSpecified,
                    extendExpiryBy,
                    extendExpiryBySpecified,
                    erReference,
                    param1,
                    param2}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndbalanceIncrement(System.IAsyncResult asyncResult, out int @return, out bool returnSpecified, out int newBal, out bool newBalSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newBal = ((int)(results[2]));
        newBalSpecified = ((bool)(results[3]));
    }
    
    /// <remarks/>
    public void balanceIncrementAsync(string user, string password, string msisdn, int amount, bool amountSpecified, string currencyType, bool updExp, bool updExpSpecified, short extendExpiryBy, bool extendExpiryBySpecified, string erReference, string param1, string param2) {
        this.balanceIncrementAsync(user, password, msisdn, amount, amountSpecified, currencyType, updExp, updExpSpecified, extendExpiryBy, extendExpiryBySpecified, erReference, param1, param2, null);
    }
    
    /// <remarks/>
    public void balanceIncrementAsync(string user, string password, string msisdn, int amount, bool amountSpecified, string currencyType, bool updExp, bool updExpSpecified, short extendExpiryBy, bool extendExpiryBySpecified, string erReference, string param1, string param2, object userState) {
        if ((this.balanceIncrementOperationCompleted == null)) {
            this.balanceIncrementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbalanceIncrementOperationCompleted);
        }
        this.InvokeAsync("balanceIncrement", new object[] {
                    user,
                    password,
                    msisdn,
                    amount,
                    amountSpecified,
                    currencyType,
                    updExp,
                    updExpSpecified,
                    extendExpiryBy,
                    extendExpiryBySpecified,
                    erReference,
                    param1,
                    param2}, this.balanceIncrementOperationCompleted, userState);
    }
    
    private void OnbalanceIncrementOperationCompleted(object arg) {
        if ((this.balanceIncrementCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.balanceIncrementCompleted(this, new balanceIncrementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:requestDebit", RequestElementName="requestDebit4In", RequestNamespace="http://axis.soap.service.s2100.product.redknee.com", ResponseElementName="requestDebit4Out", ResponseNamespace="http://axis.soap.service.s2100.product.redknee.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void requestDebit(
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string msisdn, 
                long amount, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currencyType, 
                bool balFlag, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool balFlagSpecified, 
                [System.Xml.Serialization.XmlElementAttribute("inputParamSet", IsNullable=true)] S2100SOAPParameter[] inputParamSet, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string erReference, 
                out int @return, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified, 
                out long newBal, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool newBalSpecified, 
                out long shortfall, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool shortfallSpecified, 
                [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("outParamset", Namespace="http://axis.soap.service.s2100.product.redknee.com/xsd")] out S2100SOAPParameter[] outputParamSet) {
        object[] results = this.Invoke("requestDebit", new object[] {
                    user,
                    password,
                    msisdn,
                    amount,
                    amountSpecified,
                    currencyType,
                    balFlag,
                    balFlagSpecified,
                    inputParamSet,
                    erReference});
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newBal = ((long)(results[2]));
        newBalSpecified = ((bool)(results[3]));
        shortfall = ((long)(results[4]));
        shortfallSpecified = ((bool)(results[5]));
        outputParamSet = ((S2100SOAPParameter[])(results[6]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginrequestDebit(string user, string password, string msisdn, long amount, bool amountSpecified, string currencyType, bool balFlag, bool balFlagSpecified, S2100SOAPParameter[] inputParamSet, string erReference, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("requestDebit", new object[] {
                    user,
                    password,
                    msisdn,
                    amount,
                    amountSpecified,
                    currencyType,
                    balFlag,
                    balFlagSpecified,
                    inputParamSet,
                    erReference}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndrequestDebit(System.IAsyncResult asyncResult, out int @return, out bool returnSpecified, out long newBal, out bool newBalSpecified, out long shortfall, out bool shortfallSpecified, out S2100SOAPParameter[] outputParamSet) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newBal = ((long)(results[2]));
        newBalSpecified = ((bool)(results[3]));
        shortfall = ((long)(results[4]));
        shortfallSpecified = ((bool)(results[5]));
        outputParamSet = ((S2100SOAPParameter[])(results[6]));
    }
    
    /// <remarks/>
    public void requestDebitAsync(string user, string password, string msisdn, long amount, bool amountSpecified, string currencyType, bool balFlag, bool balFlagSpecified, S2100SOAPParameter[] inputParamSet, string erReference) {
        this.requestDebitAsync(user, password, msisdn, amount, amountSpecified, currencyType, balFlag, balFlagSpecified, inputParamSet, erReference, null);
    }
    
    /// <remarks/>
    public void requestDebitAsync(string user, string password, string msisdn, long amount, bool amountSpecified, string currencyType, bool balFlag, bool balFlagSpecified, S2100SOAPParameter[] inputParamSet, string erReference, object userState) {
        if ((this.requestDebitOperationCompleted == null)) {
            this.requestDebitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrequestDebitOperationCompleted);
        }
        this.InvokeAsync("requestDebit", new object[] {
                    user,
                    password,
                    msisdn,
                    amount,
                    amountSpecified,
                    currencyType,
                    balFlag,
                    balFlagSpecified,
                    inputParamSet,
                    erReference}, this.requestDebitOperationCompleted, userState);
    }
    
    private void OnrequestDebitOperationCompleted(object arg) {
        if ((this.requestDebitCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.requestDebitCompleted(this, new requestDebitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:requestBalance", RequestElementName="requestBalance6In", RequestNamespace="http://axis.soap.service.s2100.product.redknee.com", ResponseElementName="requestBalance6Out", ResponseNamespace="http://axis.soap.service.s2100.product.redknee.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void requestBalance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string msisdn, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currencyType, bool sendExpiry, [System.Xml.Serialization.XmlIgnoreAttribute()] bool sendExpirySpecified, [System.Xml.Serialization.XmlElementAttribute("inputParamSet", IsNullable=true)] S2100SOAPParameter[] inputParamSet, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string erReference, out int @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string expiry, out long balance, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool balanceSpecified, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("outParamset", Namespace="http://axis.soap.service.s2100.product.redknee.com/xsd")] out S2100SOAPParameter[] outputParamSet) {
        object[] results = this.Invoke("requestBalance", new object[] {
                    user,
                    password,
                    msisdn,
                    currencyType,
                    sendExpiry,
                    sendExpirySpecified,
                    inputParamSet,
                    erReference});
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        expiry = ((string)(results[2]));
        balance = ((long)(results[3]));
        balanceSpecified = ((bool)(results[4]));
        outputParamSet = ((S2100SOAPParameter[])(results[5]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginrequestBalance(string user, string password, string msisdn, string currencyType, bool sendExpiry, bool sendExpirySpecified, S2100SOAPParameter[] inputParamSet, string erReference, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("requestBalance", new object[] {
                    user,
                    password,
                    msisdn,
                    currencyType,
                    sendExpiry,
                    sendExpirySpecified,
                    inputParamSet,
                    erReference}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndrequestBalance(System.IAsyncResult asyncResult, out int @return, out bool returnSpecified, out string expiry, out long balance, out bool balanceSpecified, out S2100SOAPParameter[] outputParamSet) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        expiry = ((string)(results[2]));
        balance = ((long)(results[3]));
        balanceSpecified = ((bool)(results[4]));
        outputParamSet = ((S2100SOAPParameter[])(results[5]));
    }
    
    /// <remarks/>
    public void requestBalanceAsync(string user, string password, string msisdn, string currencyType, bool sendExpiry, bool sendExpirySpecified, S2100SOAPParameter[] inputParamSet, string erReference) {
        this.requestBalanceAsync(user, password, msisdn, currencyType, sendExpiry, sendExpirySpecified, inputParamSet, erReference, null);
    }
    
    /// <remarks/>
    public void requestBalanceAsync(string user, string password, string msisdn, string currencyType, bool sendExpiry, bool sendExpirySpecified, S2100SOAPParameter[] inputParamSet, string erReference, object userState) {
        if ((this.requestBalanceOperationCompleted == null)) {
            this.requestBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrequestBalanceOperationCompleted);
        }
        this.InvokeAsync("requestBalance", new object[] {
                    user,
                    password,
                    msisdn,
                    currencyType,
                    sendExpiry,
                    sendExpirySpecified,
                    inputParamSet,
                    erReference}, this.requestBalanceOperationCompleted, userState);
    }
    
    private void OnrequestBalanceOperationCompleted(object arg) {
        if ((this.requestBalanceCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.requestBalanceCompleted(this, new requestBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:requestCredit", RequestElementName="requestCredit5In", RequestNamespace="http://axis.soap.service.s2100.product.redknee.com", ResponseElementName="requestCredit5Out", ResponseNamespace="http://axis.soap.service.s2100.product.redknee.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void requestCredit(
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string msisdn, 
                long amount, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currencyType, 
                bool updExp, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool updExpSpecified, 
                short extendExpiryBy, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool extendExpiryBySpecified, 
                [System.Xml.Serialization.XmlElementAttribute("inputParamSet", IsNullable=true)] S2100SOAPParameter[] inputParamSet, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string erReference, 
                out int @return, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified, 
                out long newBal, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool newBalSpecified, 
                [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("outParamset", Namespace="http://axis.soap.service.s2100.product.redknee.com/xsd")] out S2100SOAPParameter[] outputParamSet) {
        object[] results = this.Invoke("requestCredit", new object[] {
                    user,
                    password,
                    msisdn,
                    amount,
                    amountSpecified,
                    currencyType,
                    updExp,
                    updExpSpecified,
                    extendExpiryBy,
                    extendExpiryBySpecified,
                    inputParamSet,
                    erReference});
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newBal = ((long)(results[2]));
        newBalSpecified = ((bool)(results[3]));
        outputParamSet = ((S2100SOAPParameter[])(results[4]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginrequestCredit(string user, string password, string msisdn, long amount, bool amountSpecified, string currencyType, bool updExp, bool updExpSpecified, short extendExpiryBy, bool extendExpiryBySpecified, S2100SOAPParameter[] inputParamSet, string erReference, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("requestCredit", new object[] {
                    user,
                    password,
                    msisdn,
                    amount,
                    amountSpecified,
                    currencyType,
                    updExp,
                    updExpSpecified,
                    extendExpiryBy,
                    extendExpiryBySpecified,
                    inputParamSet,
                    erReference}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndrequestCredit(System.IAsyncResult asyncResult, out int @return, out bool returnSpecified, out long newBal, out bool newBalSpecified, out S2100SOAPParameter[] outputParamSet) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newBal = ((long)(results[2]));
        newBalSpecified = ((bool)(results[3]));
        outputParamSet = ((S2100SOAPParameter[])(results[4]));
    }
    
    /// <remarks/>
    public void requestCreditAsync(string user, string password, string msisdn, long amount, bool amountSpecified, string currencyType, bool updExp, bool updExpSpecified, short extendExpiryBy, bool extendExpiryBySpecified, S2100SOAPParameter[] inputParamSet, string erReference) {
        this.requestCreditAsync(user, password, msisdn, amount, amountSpecified, currencyType, updExp, updExpSpecified, extendExpiryBy, extendExpiryBySpecified, inputParamSet, erReference, null);
    }
    
    /// <remarks/>
    public void requestCreditAsync(string user, string password, string msisdn, long amount, bool amountSpecified, string currencyType, bool updExp, bool updExpSpecified, short extendExpiryBy, bool extendExpiryBySpecified, S2100SOAPParameter[] inputParamSet, string erReference, object userState) {
        if ((this.requestCreditOperationCompleted == null)) {
            this.requestCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrequestCreditOperationCompleted);
        }
        this.InvokeAsync("requestCredit", new object[] {
                    user,
                    password,
                    msisdn,
                    amount,
                    amountSpecified,
                    currencyType,
                    updExp,
                    updExpSpecified,
                    extendExpiryBy,
                    extendExpiryBySpecified,
                    inputParamSet,
                    erReference}, this.requestCreditOperationCompleted, userState);
    }
    
    private void OnrequestCreditOperationCompleted(object arg) {
        if ((this.requestCreditCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.requestCreditCompleted(this, new requestCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:reservCancel", RequestElementName="reservCancel2In", RequestNamespace="http://axis.soap.service.s2100.product.redknee.com", ResponseElementName="reservCancel2Out", ResponseNamespace="http://axis.soap.service.s2100.product.redknee.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void reservCancel([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string msisdn, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string reservID, [System.Xml.Serialization.XmlElementAttribute("inParamSet", IsNullable=true)] S2100SOAPParameter[] inParamSet, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string erReference, out int @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("outParamset", Namespace="http://axis.soap.service.s2100.product.redknee.com/xsd")] out S2100SOAPParameter[] args6) {
        object[] results = this.Invoke("reservCancel", new object[] {
                    user,
                    password,
                    msisdn,
                    reservID,
                    inParamSet,
                    erReference});
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        args6 = ((S2100SOAPParameter[])(results[2]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginreservCancel(string user, string password, string msisdn, string reservID, S2100SOAPParameter[] inParamSet, string erReference, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("reservCancel", new object[] {
                    user,
                    password,
                    msisdn,
                    reservID,
                    inParamSet,
                    erReference}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndreservCancel(System.IAsyncResult asyncResult, out int @return, out bool returnSpecified, out S2100SOAPParameter[] args6) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        args6 = ((S2100SOAPParameter[])(results[2]));
    }
    
    /// <remarks/>
    public void reservCancelAsync(string user, string password, string msisdn, string reservID, S2100SOAPParameter[] inParamSet, string erReference) {
        this.reservCancelAsync(user, password, msisdn, reservID, inParamSet, erReference, null);
    }
    
    /// <remarks/>
    public void reservCancelAsync(string user, string password, string msisdn, string reservID, S2100SOAPParameter[] inParamSet, string erReference, object userState) {
        if ((this.reservCancelOperationCompleted == null)) {
            this.reservCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreservCancelOperationCompleted);
        }
        this.InvokeAsync("reservCancel", new object[] {
                    user,
                    password,
                    msisdn,
                    reservID,
                    inParamSet,
                    erReference}, this.reservCancelOperationCompleted, userState);
    }
    
    private void OnreservCancelOperationCompleted(object arg) {
        if ((this.reservCancelCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.reservCancelCompleted(this, new reservCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:reservConfirm", RequestElementName="reservConfirm1In", RequestNamespace="http://axis.soap.service.s2100.product.redknee.com", ResponseElementName="reservConfirm1Out", ResponseNamespace="http://axis.soap.service.s2100.product.redknee.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void reservConfirm([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string msisdn, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currencyType, long confirmSize, [System.Xml.Serialization.XmlIgnoreAttribute()] bool confirmSizeSpecified, int confirmDuration, [System.Xml.Serialization.XmlIgnoreAttribute()] bool confirmDurationSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string reservID, [System.Xml.Serialization.XmlElementAttribute("inParamSet", IsNullable=true)] S2100SOAPParameter[] inParamSet, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string erReference, out int @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("outParamset", Namespace="http://axis.soap.service.s2100.product.redknee.com/xsd")] out S2100SOAPParameter[] outParamset) {
        object[] results = this.Invoke("reservConfirm", new object[] {
                    user,
                    password,
                    msisdn,
                    currencyType,
                    confirmSize,
                    confirmSizeSpecified,
                    confirmDuration,
                    confirmDurationSpecified,
                    reservID,
                    inParamSet,
                    erReference});
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        outParamset = ((S2100SOAPParameter[])(results[2]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginreservConfirm(string user, string password, string msisdn, string currencyType, long confirmSize, bool confirmSizeSpecified, int confirmDuration, bool confirmDurationSpecified, string reservID, S2100SOAPParameter[] inParamSet, string erReference, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("reservConfirm", new object[] {
                    user,
                    password,
                    msisdn,
                    currencyType,
                    confirmSize,
                    confirmSizeSpecified,
                    confirmDuration,
                    confirmDurationSpecified,
                    reservID,
                    inParamSet,
                    erReference}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndreservConfirm(System.IAsyncResult asyncResult, out int @return, out bool returnSpecified, out S2100SOAPParameter[] outParamset) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        outParamset = ((S2100SOAPParameter[])(results[2]));
    }
    
    /// <remarks/>
    public void reservConfirmAsync(string user, string password, string msisdn, string currencyType, long confirmSize, bool confirmSizeSpecified, int confirmDuration, bool confirmDurationSpecified, string reservID, S2100SOAPParameter[] inParamSet, string erReference) {
        this.reservConfirmAsync(user, password, msisdn, currencyType, confirmSize, confirmSizeSpecified, confirmDuration, confirmDurationSpecified, reservID, inParamSet, erReference, null);
    }
    
    /// <remarks/>
    public void reservConfirmAsync(string user, string password, string msisdn, string currencyType, long confirmSize, bool confirmSizeSpecified, int confirmDuration, bool confirmDurationSpecified, string reservID, S2100SOAPParameter[] inParamSet, string erReference, object userState) {
        if ((this.reservConfirmOperationCompleted == null)) {
            this.reservConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreservConfirmOperationCompleted);
        }
        this.InvokeAsync("reservConfirm", new object[] {
                    user,
                    password,
                    msisdn,
                    currencyType,
                    confirmSize,
                    confirmSizeSpecified,
                    confirmDuration,
                    confirmDurationSpecified,
                    reservID,
                    inParamSet,
                    erReference}, this.reservConfirmOperationCompleted, userState);
    }
    
    private void OnreservConfirmOperationCompleted(object arg) {
        if ((this.reservConfirmCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.reservConfirmCompleted(this, new reservConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:balDeduct", RequestElementName="balDeduct12In", RequestNamespace="http://axis.soap.service.s2100.product.redknee.com", ResponseElementName="balDeduct12Out", ResponseNamespace="http://axis.soap.service.s2100.product.redknee.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void balDeduct(
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                long msisdn, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool msisdnSpecified, 
                int amount, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currencyType, 
                bool balFlag, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool balFlagSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string erReference, 
                out int @return, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified, 
                out int newBal, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool newBalSpecified, 
                out int shortfall, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool shortfallSpecified) {
        object[] results = this.Invoke("balDeduct", new object[] {
                    user,
                    password,
                    msisdn,
                    msisdnSpecified,
                    amount,
                    amountSpecified,
                    currencyType,
                    balFlag,
                    balFlagSpecified,
                    erReference});
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newBal = ((int)(results[2]));
        newBalSpecified = ((bool)(results[3]));
        shortfall = ((int)(results[4]));
        shortfallSpecified = ((bool)(results[5]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginbalDeduct(string user, string password, long msisdn, bool msisdnSpecified, int amount, bool amountSpecified, string currencyType, bool balFlag, bool balFlagSpecified, string erReference, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("balDeduct", new object[] {
                    user,
                    password,
                    msisdn,
                    msisdnSpecified,
                    amount,
                    amountSpecified,
                    currencyType,
                    balFlag,
                    balFlagSpecified,
                    erReference}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndbalDeduct(System.IAsyncResult asyncResult, out int @return, out bool returnSpecified, out int newBal, out bool newBalSpecified, out int shortfall, out bool shortfallSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        newBal = ((int)(results[2]));
        newBalSpecified = ((bool)(results[3]));
        shortfall = ((int)(results[4]));
        shortfallSpecified = ((bool)(results[5]));
    }
    
    /// <remarks/>
    public void balDeductAsync(string user, string password, long msisdn, bool msisdnSpecified, int amount, bool amountSpecified, string currencyType, bool balFlag, bool balFlagSpecified, string erReference) {
        this.balDeductAsync(user, password, msisdn, msisdnSpecified, amount, amountSpecified, currencyType, balFlag, balFlagSpecified, erReference, null);
    }
    
    /// <remarks/>
    public void balDeductAsync(string user, string password, long msisdn, bool msisdnSpecified, int amount, bool amountSpecified, string currencyType, bool balFlag, bool balFlagSpecified, string erReference, object userState) {
        if ((this.balDeductOperationCompleted == null)) {
            this.balDeductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbalDeductOperationCompleted);
        }
        this.InvokeAsync("balDeduct", new object[] {
                    user,
                    password,
                    msisdn,
                    msisdnSpecified,
                    amount,
                    amountSpecified,
                    currencyType,
                    balFlag,
                    balFlagSpecified,
                    erReference}, this.balDeductOperationCompleted, userState);
    }
    
    private void OnbalDeductOperationCompleted(object arg) {
        if ((this.balDeductCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.balDeductCompleted(this, new balDeductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:reservRequest", RequestElementName="reservRequest0In", RequestNamespace="http://axis.soap.service.s2100.product.redknee.com", ResponseElementName="reservRequest0Out", ResponseNamespace="http://axis.soap.service.s2100.product.redknee.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void reservRequest(
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string user, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string msisdn, 
                long size, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool sizeSpecified, 
                int duration, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] bool durationSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currencyType, 
                [System.Xml.Serialization.XmlElementAttribute("inParamset", IsNullable=true)] S2100SOAPParameter[] inParamset, 
                [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string erReference, 
                out int @return, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified, 
                out string reservID, 
                out long reservSize, 
                out int reservDuration, 
                [System.Xml.Serialization.XmlArrayItemAttribute("outParamset", Namespace="http://axis.soap.service.s2100.product.redknee.com/xsd")] out S2100SOAPParameter[] outParamSet) {
        object[] results = this.Invoke("reservRequest", new object[] {
                    user,
                    password,
                    msisdn,
                    size,
                    sizeSpecified,
                    duration,
                    durationSpecified,
                    currencyType,
                    inParamset,
                    erReference});
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        reservID = ((string)(results[2]));
        reservSize = ((long)(results[3]));
        reservDuration = ((int)(results[4]));
        outParamSet = ((S2100SOAPParameter[])(results[5]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginreservRequest(string user, string password, string msisdn, long size, bool sizeSpecified, int duration, bool durationSpecified, string currencyType, S2100SOAPParameter[] inParamset, string erReference, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("reservRequest", new object[] {
                    user,
                    password,
                    msisdn,
                    size,
                    sizeSpecified,
                    duration,
                    durationSpecified,
                    currencyType,
                    inParamset,
                    erReference}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndreservRequest(System.IAsyncResult asyncResult, out int @return, out bool returnSpecified, out string reservID, out long reservSize, out int reservDuration, out S2100SOAPParameter[] outParamSet) {
        object[] results = this.EndInvoke(asyncResult);
        @return = ((int)(results[0]));
        returnSpecified = ((bool)(results[1]));
        reservID = ((string)(results[2]));
        reservSize = ((long)(results[3]));
        reservDuration = ((int)(results[4]));
        outParamSet = ((S2100SOAPParameter[])(results[5]));
    }
    
    /// <remarks/>
    public void reservRequestAsync(string user, string password, string msisdn, long size, bool sizeSpecified, int duration, bool durationSpecified, string currencyType, S2100SOAPParameter[] inParamset, string erReference) {
        this.reservRequestAsync(user, password, msisdn, size, sizeSpecified, duration, durationSpecified, currencyType, inParamset, erReference, null);
    }
    
    /// <remarks/>
    public void reservRequestAsync(string user, string password, string msisdn, long size, bool sizeSpecified, int duration, bool durationSpecified, string currencyType, S2100SOAPParameter[] inParamset, string erReference, object userState) {
        if ((this.reservRequestOperationCompleted == null)) {
            this.reservRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreservRequestOperationCompleted);
        }
        this.InvokeAsync("reservRequest", new object[] {
                    user,
                    password,
                    msisdn,
                    size,
                    sizeSpecified,
                    duration,
                    durationSpecified,
                    currencyType,
                    inParamset,
                    erReference}, this.reservRequestOperationCompleted, userState);
    }
    
    private void OnreservRequestOperationCompleted(object arg) {
        if ((this.reservRequestCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.reservRequestCompleted(this, new reservRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axis.soap.service.s2100.product.redknee.com/xsd")]
public partial class S2100SOAPParameter {
    
    private short parameterIDField;
    
    private S2100SOAPParameterValue valueField;
    
    /// <remarks/>
    public short parameterID {
        get {
            return this.parameterIDField;
        }
        set {
            this.parameterIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public S2100SOAPParameterValue value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axis.soap.service.s2100.product.redknee.com/xsd")]
public partial class S2100SOAPParameterValue {
    
    private int ___intValueField;
    
    private long ___longValueField;
    
    private float ___floatValueField;
    
    private double ___doubleValueField;
    
    private string ___stringValueField;
    
    private bool ___booleanValueField;
    
    private byte[] ___byteArrayValueField;
    
    private int @__discriminatorField;
    
    private bool @__uninitializedField;
    
    /// <remarks/>
    public int ___intValue {
        get {
            return this.___intValueField;
        }
        set {
            this.___intValueField = value;
        }
    }
    
    /// <remarks/>
    public long ___longValue {
        get {
            return this.___longValueField;
        }
        set {
            this.___longValueField = value;
        }
    }
    
    /// <remarks/>
    public float ___floatValue {
        get {
            return this.___floatValueField;
        }
        set {
            this.___floatValueField = value;
        }
    }
    
    /// <remarks/>
    public double ___doubleValue {
        get {
            return this.___doubleValueField;
        }
        set {
            this.___doubleValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string ___stringValue {
        get {
            return this.___stringValueField;
        }
        set {
            this.___stringValueField = value;
        }
    }
    
    /// <remarks/>
    public bool ___booleanValue {
        get {
            return this.___booleanValueField;
        }
        set {
            this.___booleanValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] ___byteArrayValue {
        get {
            return this.___byteArrayValueField;
        }
        set {
            this.___byteArrayValueField = value;
        }
    }
    
    /// <remarks/>
    public int @__discriminator {
        get {
            return this.@__discriminatorField;
        }
        set {
            this.@__discriminatorField = value;
        }
    }
    
    /// <remarks/>
    public bool @__uninitialized {
        get {
            return this.@__uninitializedField;
        }
        set {
            this.@__uninitializedField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void reservRequestConfirmCompletedEventHandler(object sender, reservRequestConfirmCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class reservRequestConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal reservRequestConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string newReservID {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public long reservSize {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public bool reservSizeSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[4]));
        }
    }
    
    /// <remarks/>
    public int reservDuration {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[5]));
        }
    }
    
    /// <remarks/>
    public bool reservDurationSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[6]));
        }
    }
    
    /// <remarks/>
    public S2100SOAPParameter[] outParamSet {
        get {
            this.RaiseExceptionIfNecessary();
            return ((S2100SOAPParameter[])(this.results[7]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void balanceQueryCompletedEventHandler(object sender, balanceQueryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class balanceQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal balanceQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string oldExpiery {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public string newExpiery {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public int balance {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[4]));
        }
    }
    
    /// <remarks/>
    public bool balanceSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[5]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void balanceDeductCompletedEventHandler(object sender, balanceDeductCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class balanceDeductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal balanceDeductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public int newBal {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public bool newBalSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public int shortFall {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[4]));
        }
    }
    
    /// <remarks/>
    public bool shortFallSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[5]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void balIncCompletedEventHandler(object sender, balIncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class balIncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal balIncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public int newBal {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public bool newBalSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[3]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void balQCompletedEventHandler(object sender, balQCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class balQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal balQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string expiery {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public int balance {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public bool balanceSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[4]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void balanceIncrementCompletedEventHandler(object sender, balanceIncrementCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class balanceIncrementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal balanceIncrementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public int newBal {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public bool newBalSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[3]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void requestDebitCompletedEventHandler(object sender, requestDebitCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class requestDebitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal requestDebitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long newBal {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public bool newBalSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public long shortfall {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[4]));
        }
    }
    
    /// <remarks/>
    public bool shortfallSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[5]));
        }
    }
    
    /// <remarks/>
    public S2100SOAPParameter[] outputParamSet {
        get {
            this.RaiseExceptionIfNecessary();
            return ((S2100SOAPParameter[])(this.results[6]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void requestBalanceCompletedEventHandler(object sender, requestBalanceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class requestBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal requestBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string expiry {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public long balance {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public bool balanceSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[4]));
        }
    }
    
    /// <remarks/>
    public S2100SOAPParameter[] outputParamSet {
        get {
            this.RaiseExceptionIfNecessary();
            return ((S2100SOAPParameter[])(this.results[5]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void requestCreditCompletedEventHandler(object sender, requestCreditCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class requestCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal requestCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long newBal {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public bool newBalSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public S2100SOAPParameter[] outputParamSet {
        get {
            this.RaiseExceptionIfNecessary();
            return ((S2100SOAPParameter[])(this.results[4]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void reservCancelCompletedEventHandler(object sender, reservCancelCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class reservCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal reservCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public S2100SOAPParameter[] args6 {
        get {
            this.RaiseExceptionIfNecessary();
            return ((S2100SOAPParameter[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void reservConfirmCompletedEventHandler(object sender, reservConfirmCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class reservConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal reservConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public S2100SOAPParameter[] outParamset {
        get {
            this.RaiseExceptionIfNecessary();
            return ((S2100SOAPParameter[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void balDeductCompletedEventHandler(object sender, balDeductCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class balDeductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal balDeductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public int newBal {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public bool newBalSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public int shortfall {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[4]));
        }
    }
    
    /// <remarks/>
    public bool shortfallSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[5]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void reservRequestCompletedEventHandler(object sender, reservRequestCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class reservRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal reservRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int @return {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public bool returnSpecified {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string reservID {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public long reservSize {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public int reservDuration {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[4]));
        }
    }
    
    /// <remarks/>
    public S2100SOAPParameter[] outParamSet {
        get {
            this.RaiseExceptionIfNecessary();
            return ((S2100SOAPParameter[])(this.results[5]));
        }
    }
}
